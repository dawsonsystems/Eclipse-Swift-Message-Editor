/*
* generated by Xtext
*/
package com.dawsonsystems.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IInstanceDescription;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import com.dawsonsystems.services.SwiftGrammarAccess;

import com.google.inject.Inject;

public class SwiftParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private SwiftGrammarAccess grammarAccess;
		
	public SwiftGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}

	protected AbstractToken getRootToken(IInstanceDescription inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IInstanceDescription inst) {
		super(inst);
	}
	
	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_Group(this, this, 0, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Message ****************
 *
 * Message:
 *   elements+=( BeginningLine | ComplexBeginningLine )+ "{" STR ":\n" elements+=Line+ "-}";
 *
 **/

// elements+=( BeginningLine | ComplexBeginningLine )+ "{" STR ":\n" elements+=Line+ "-}"
protected class Message_Group extends GroupToken {
	
	public Message_Group(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public Group getGrammarElement() {
		return grammarAccess.getMessageAccess().getGroup();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_HyphenMinusRightCurlyBracketKeyword_5(parent, this, 0, inst);
			default: return null;
		}	
	}	
		
	public IInstanceDescription tryConsume() {
		if(!current.isInstanceOf(grammarAccess.getMessageRule().getType().getClassifier())) return null;
		return tryConsumeVal();
	}
}

// elements+=( BeginningLine | ComplexBeginningLine )+
protected class Message_ElementsAssignment_0 extends AssignmentToken  {
	
	public Message_ElementsAssignment_0(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getElementsAssignment_0();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_ElementsAssignment_0(parent, this, 0, inst);
			default: return parent.createParentFollower(this, index, index - 1, inst);
		}	
	}	
		
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("elements",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("elements");
		if(Boolean.TRUE.booleanValue()) { // org::eclipse::xtext::impl::RuleCallImpl FIXME: check if value is valid for datatype rule
			type = AssignmentType.DRC;
			element = grammarAccess.getMessageAccess().getElementsBeginningLineParserRuleCall_0_0_0();
			return obj;
		}
		if(Boolean.TRUE.booleanValue()) { // org::eclipse::xtext::impl::RuleCallImpl FIXME: check if value is valid for datatype rule
			type = AssignmentType.DRC;
			element = grammarAccess.getMessageAccess().getElementsComplexBeginningLineParserRuleCall_0_0_1();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Message_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public Message_LeftCurlyBracketKeyword_1(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public Keyword getGrammarElement() {
		return grammarAccess.getMessageAccess().getLeftCurlyBracketKeyword_1();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_ElementsAssignment_0(parent, this, 0, inst);
			default: return null;
		}	
	}	
		
}

// STR
protected class Message_STRTerminalRuleCall_2 extends UnassignedTextToken {

	public Message_STRTerminalRuleCall_2(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public RuleCall getGrammarElement() {
		return grammarAccess.getMessageAccess().getSTRTerminalRuleCall_2();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_LeftCurlyBracketKeyword_1(parent, this, 0, inst);
			default: return null;
		}	
	}	
		
}

// ":\n"
protected class Message_ColonKeyword_3 extends KeywordToken  {
	
	public Message_ColonKeyword_3(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public Keyword getGrammarElement() {
		return grammarAccess.getMessageAccess().getColonKeyword_3();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_STRTerminalRuleCall_2(parent, this, 0, inst);
			default: return null;
		}	
	}	
		
}

// elements+=Line+
protected class Message_ElementsAssignment_4 extends AssignmentToken  {
	
	public Message_ElementsAssignment_4(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public Assignment getGrammarElement() {
		return grammarAccess.getMessageAccess().getElementsAssignment_4();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_ElementsAssignment_4(parent, this, 0, inst);
			case 1: return new Message_ColonKeyword_3(parent, this, 1, inst);
			default: return null;
		}	
	}	
		
	protected IInstanceDescription tryConsumeVal() {
		if((value = current.getConsumable("elements",true)) == null) return null;
		IInstanceDescription obj = current.cloneAndConsume("elements");
		if(Boolean.TRUE.booleanValue()) { // org::eclipse::xtext::impl::RuleCallImpl FIXME: check if value is valid for datatype rule
			type = AssignmentType.DRC;
			element = grammarAccess.getMessageAccess().getElementsLineParserRuleCall_4_0();
			return obj;
		}
		return null;
	}

}

// "-}"
protected class Message_HyphenMinusRightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Message_HyphenMinusRightCurlyBracketKeyword_5(AbstractToken parent, AbstractToken next, int no, IInstanceDescription current) {
		super(parent, next, no, current);
	}
	
	public Keyword getGrammarElement() {
		return grammarAccess.getMessageAccess().getHyphenMinusRightCurlyBracketKeyword_5();
	}

	public AbstractToken createFollower(int index, IInstanceDescription inst) {
		switch(index) {
			case 0: return new Message_ElementsAssignment_4(parent, this, 0, inst);
			default: return null;
		}	
	}	
		
}


/************ end Rule Message ****************/










}
